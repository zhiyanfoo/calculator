
# ../calculator/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'BAB86073630AD7F555DD9C37C3EC2618'
    
_lr_action_items = {'+':([2,3,6,7,],[4,-4,-2,-3,]),'NUMBER':([0,4,5,],[3,3,3,]),'$end':([1,2,3,6,7,],[0,-1,-4,-2,-3,]),'-':([2,3,6,7,],[5,-4,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,],[2,6,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expression','calcparse.py',25),
  ('expression -> expression + expression','expression',3,'p_expression_binop','calcparse.py',29),
  ('expression -> expression - expression','expression',3,'p_expression_binop','calcparse.py',30),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcparse.py',36),
]
